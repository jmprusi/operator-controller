apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: catalogd
    app.kubernetes.io/instance: system
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: namespace
    app.kubernetes.io/part-of: catalogd
    control-plane: controller-manager
  name: catalogd-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: bundlemetadata.catalogd.operatorframework.io
spec:
  group: catalogd.operatorframework.io
  names:
    kind: BundleMetadata
    listKind: BundleMetadataList
    plural: bundlemetadata
    singular: bundlemetadata
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: BundleMetadata
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BundleMetadataSpec defines the desired state of BundleMetadata
            properties:
              catalogSource:
                description: CatalogSource is the name of the CatalogSource that provides
                  this bundle
                type: string
              image:
                description: Image is a reference to the image that provides the bundle
                  contents
                type: string
              package:
                description: Package is the name of the package that provides this
                  bundle
                type: string
              properties:
                description: Properties is a string of references to property objects
                  that are part of the bundle
                items:
                  description: 'TODO: In the future we should remove this in favor
                    of using `property.Property` from https://pkg.go.dev/github.com/operator-framework/operator-registry@v1.26.3/alpha/property#Property
                    This will likely require some changes to the `property.Property`
                    type to make it suitable for usage within the Spec for a CustomResource'
                  properties:
                    type:
                      type: string
                    value:
                      format: byte
                      type: string
                  required:
                  - type
                  - value
                  type: object
                type: array
              relatedImages:
                description: RelatedImages are the RelatedImages in the bundle
                items:
                  description: 'TODO: In the future we should remove this in favor
                    of using `model.RelatedImage` (or similar) from https://pkg.go.dev/github.com/operator-framework/operator-registry@v1.26.3/alpha/model#RelatedImage
                    This will likely require some changes to the `model.RelatedImage`
                    type to make it suitable for usage within the Spec for a CustomResource'
                  properties:
                    image:
                      type: string
                    name:
                      type: string
                  required:
                  - image
                  - name
                  type: object
                type: array
            required:
            - catalogSource
            - image
            - package
            - properties
            - relatedImages
            type: object
          status:
            description: BundleMetadataStatus defines the observed state of BundleMetadata
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: catalogsources.catalogd.operatorframework.io
spec:
  group: catalogd.operatorframework.io
  names:
    kind: CatalogSource
    listKind: CatalogSourceList
    plural: catalogsources
    singular: catalogsource
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: CatalogSource
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: CatalogSourceSpec defines the desired state of CatalogSource
            properties:
              image:
                description: Image is the Catalog image that contains Operators' metadata
                  in the FBC format https://olm.operatorframework.io/docs/reference/file-based-catalogs/#docs
                type: string
              pollingInterval:
                description: PollingInterval is used to determine the time interval
                  between checks of the latest index image version. The image is polled
                  to see if a new version of the image is available. If available,
                  the latest image is pulled and the cache is updated to contain the
                  new content.
                type: string
            required:
            - image
            type: object
          status:
            description: CatalogSourceStatus defines the observed state of CatalogSource
            properties:
              conditions:
                description: Conditions store the status conditions of the CatalogSource
                  instances
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.10.0
  creationTimestamp: null
  name: packages.catalogd.operatorframework.io
spec:
  group: catalogd.operatorframework.io
  names:
    kind: Package
    listKind: PackageList
    plural: packages
    singular: package
  scope: Cluster
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Package
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PackageSpec defines the desired state of Package
            properties:
              catalogSource:
                description: CatalogSource is the name of the CatalogSource this package
                  belongs to
                type: string
              catalogSourceDisplayName:
                type: string
              catalogSourcePublisher:
                type: string
              channels:
                description: Channels are the declared channels for the package, ala
                  `stable` or `alpha`.
                items:
                  description: PackageChannel defines a single channel under a package,
                    pointing to a version of that package.
                  properties:
                    entries:
                      description: Entries is all the channel entries within a channel
                      items:
                        properties:
                          name:
                            type: string
                          replaces:
                            type: string
                          skipRange:
                            type: string
                          skips:
                            items:
                              type: string
                            type: array
                        required:
                        - name
                        type: object
                      type: array
                    name:
                      description: Name is the name of the channel, e.g. `alpha` or
                        `stable`
                      type: string
                  required:
                  - entries
                  - name
                  type: object
                type: array
              defaultChannel:
                description: DefaultChannel is, if specified, the name of the default
                  channel for the package. The default channel will be installed if
                  no other channel is explicitly given. If the package has a single
                  channel, then that channel is implicitly the default.
                type: string
              description:
                description: Description is the description of the package
                type: string
              icon:
                description: Icon is the Base64data image of the package for console
                  display
                properties:
                  base64data:
                    type: string
                  mediatype:
                    type: string
                type: object
            required:
            - catalogSource
            - channels
            - defaultChannel
            - description
            type: object
          status:
            description: PackageStatus defines the observed state of Package
            type: object
        type: object
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kuberentes.io/instance: controller-manager
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: catalogd
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: catalogd
  name: catalogd-controller-manager
  namespace: catalogd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: catalogd
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: catalogd
  name: catalogd-leader-election-role
  namespace: catalogd-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: catalogd-manager-role
rules:
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - catalogd.operatorframework.io
  resources:
  - bundlemetadata
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - catalogd.operatorframework.io
  resources:
  - bundlemetadata/finalizers
  verbs:
  - update
- apiGroups:
  - catalogd.operatorframework.io
  resources:
  - bundlemetadata/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - catalogd.operatorframework.io
  resources:
  - catalogsources
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - catalogd.operatorframework.io
  resources:
  - catalogsources/finalizers
  verbs:
  - update
- apiGroups:
  - catalogd.operatorframework.io
  resources:
  - catalogsources/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - catalogd.operatorframework.io
  resources:
  - packages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - catalogd.operatorframework.io
  resources:
  - packages/finalizers
  verbs:
  - update
- apiGroups:
  - catalogd.operatorframework.io
  resources:
  - packages/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods/log
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: catalogd
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: catalogd
  name: catalogd-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: catalogd
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: catalogd
  name: catalogd-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: catalogd
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: catalogd
  name: catalogd-leader-election-rolebinding
  namespace: catalogd-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: catalogd-leader-election-role
subjects:
- kind: ServiceAccount
  name: catalogd-controller-manager
  namespace: catalogd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: catalogd
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: catalogd
  name: catalogd-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: catalogd-manager-role
subjects:
- kind: ServiceAccount
  name: catalogd-controller-manager
  namespace: catalogd-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: catalogd
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: catalogd
  name: catalogd-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: catalogd-proxy-role
subjects:
- kind: ServiceAccount
  name: catalogd-controller-manager
  namespace: catalogd-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: catalogd
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: catalogd
    control-plane: controller-manager
  name: catalogd-controller-manager-metrics-service
  namespace: catalogd-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: catalogd
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: catalogd
    control-plane: controller-manager
  name: catalogd-controller-manager
  namespace: catalogd-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - ./manager
        image: quay.io/operator-framework/catalogd-controller:v0.1.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 1000Mi
          requests:
            cpu: 1000m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: catalogd-controller-manager
      terminationGracePeriodSeconds: 10
